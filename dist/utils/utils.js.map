{"version":3,"sources":["../../src/utils/utils.m.js"],"sourcesContent":["export const formatDate = (date, fmt) =\u003e {\n  // 日期格式化，yyyy-MM-dd EEE hh:mm:ss\n  if (!fmt)\n    fmt = \"yyyy-MM-dd hh:mm:ss\";\n  var o = {\n    \"Y+\": date.getFullYear(),\n    \"M+\": date.getMonth() + 1,\n    \"d+\": date.getDate(),\n    \"h+\": date.getHours(),\n    \"H+\": date.getHours(),\n    \"m+\": date.getMinutes(),\n    \"s+\": date.getSeconds(),\n    \"q+\": Math.floor((date.getMonth() + 3) / 3),\n    \"S\": date.getMilliseconds()\n  };\n  var week = {\n    \"0\": \"日\",\n    \"1\": \"一\",\n    \"2\": \"二\",\n    \"3\": \"三\",\n    \"4\": \"四\",\n    \"5\": \"五\",\n    \"6\": \"六\"\n  };\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  }\n  if (/(E+)/.test(fmt)) {\n    fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length \u003e 1) ? (RegExp.$1.length \u003e 2 ? \"星期\" : \"周\") : \"\") + week[date.getDay() + \"\"]);\n  }\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n    }\n  }\n  return fmt;\n}\nexport const $dateObj = {\n  dateVal: function () {\n    return {\n      hour: 24,\n      second: 60,\n      mills: 3600,\n      format: \"yyyy-MM-dd\",\n      dateFormat: \"yyyy-MM-dd HH:mm:ss\"\n    };\n  },\n  toDate: function (date) {\n    // 转换成日期--兼容ios\n    if (typeof date == \"string\") {\n      date = date.replace(/-/g, ':').replace(' ', ':');\n      date = date.split(':');\n      if (date[3] != null \u0026\u0026 date[3] != \"\" \u0026\u0026 date[4] != null \u0026\u0026 date[4] != \"\" \u0026\u0026 date[5] != null \u0026\u0026 date[5] != \"\") {\n        return new Date(date[0], (date[1] - 1), date[2], date[3], date[4], date[5]);\n      } else {\n        return new Date(date[0], (date[1] - 1), date[2]);\n      }\n    } else {\n      return date;\n    }\n  },\n  toString: function (date, pattern) {\n    // 转换成字符串\n    var d = this.toDate(date);\n    return d.format(pattern);\n  },\n  isLeap: function (date) {\n    // 判断日期的年份是否为闰年\n    var year = this.toDate(date).getFullYear();\n    return ((year % 4 === 0 \u0026\u0026 year % 100 !== 0) || year % 400 === 0);\n  },\n  dateRange: function (date1, date2) {\n    // 获取两个时间相减的时间\n    var dateTime = this.numMillSecond(date1, date2);\n    return new Date(dateTime).format(\"yyyy-MM-dd\");\n  },\n  numYear: function (date1, date2) {\n    // 间隔年份\n    var times = this.numDay(date1, date2);\n    return Math.floor(times / 365);\n  },\n  numMonth: function (date1, date2) {\n    // 间隔月份\n    var times = this.numDay(date1, date2);\n    return Math.floor(times / 30);\n  },\n  numDay: function (date1, date2) {\n    // 间隔天数\n    var times = this.numSecond(date1, date2);\n    var hour = this.dateVal().hour;\n    var mills = this.dateVal().mills;\n    return Math.ceil(times / (mills * hour));\n  },\n  numHour: function (date1, date2) {\n    // 间隔时\n    return Math.floor(this.numMillSecond(date1, date2) / (1000 * 60 * 60));\n  },\n  numMinute: function (date1, date2) {\n    // 间隔分\n    return Math.floor(this.numMillSecond(date1, date2) / (1000 * 60));\n  },\n  numSecond: function (date1, date2) {\n    // 间隔秒数\n    return Math.floor(this.numMillSecond(date1, date2) / 1000);\n  },\n  numMillSecond: function (date1, date2) {\n    // 间隔毫秒\n    var stimes = this.getTime(this.toDate(date1));\n    var etimes = this.getTime(this.toDate(date2));\n    return etimes - stimes;\n  },\n  plusMillisSeconds: function (date, millisSeconds) {\n    // 某个日期加上多少毫秒\n    var dateTime = this.getTime(date);\n    var mintimes = millisSeconds;\n    var rdate = dateTime * 1 + mintimes * 1;\n    return this.format(new Date(rdate));\n  },\n  plusSeconds: function (date, seconds) {\n    // 某个日期加上多少秒\n    var dateTime = this.getTime(date);\n    var mintimes = seconds * 1000;\n    var rdate = dateTime * 1 + mintimes * 1;\n    return this.format(new Date(rdate));\n  },\n  plusMinutes: function (date, minutes) {\n    // 某个日期加上多少分钟\n    var dateTime = this.getTime(date);\n    var mintimes = minutes * 60 * 1000;\n    var rdate = dateTime * 1 + mintimes * 1;\n    return this.format(new Date(rdate));\n  },\n  plusHours: function (date, hours) {\n    // 某个日期加上小时数\n    var dateTime = this.getTime(date);\n    var mintimes = hours * 60 * 60 * 1000;\n    var rdate = dateTime + mintimes;\n    return this.format(new Date(rdate));\n  },\n  plusDays: function (date, days) {\n    // 某个日期加上天数\n    var dateTime = this.getTime(date);\n    var mintimes = days * 60 * 60 * 1000 * 24;\n    var rdate = dateTime * 1 + mintimes * 1;\n    return this.format(new Date(rdate));\n  },\n  plusMonths: function (date, months) {\n    // 某个日期加上多少个月,这里是按照一个月30天来计算天数的\n    var dateTime = this.getTime(date);\n    var mintimes = months * 30 * 60 * 60 * 1000 * 24;\n    var rdate = dateTime + mintimes * 1;\n    return this.format(new Date(rdate));\n  },\n  plusYears: function (date, years, isLeap) {\n    // 某个日期加上多少个年,这里是按照一个月365天来计算天数的，如果leap为true则按闰年计算\n    var dateTime = this.getTime(date);\n    var day = 365;\n    if (isLeap) day = 366;\n    var mintimes = years * day * 60 * 60 * 1000 * 24;\n    var rdate = dateTime + mintimes;\n    return this.format(new Date(rdate));\n  },\n  plusDate: function (date1, date2) {\n    // 某个日期加上某个日期，这样的操作视乎没什么意义\n    var dateTime = this.getTime(date1);\n    var dateTime2 = this.getTime(date2);;\n    var rdate = dateTime + dateTime2;\n    return this.format(new Date(rdate));\n  },\n  minusMillisSeconds: function (date, millisSeconds) {\n    // 某个日期减去多少毫秒秒\n    var dateTime = this.getTime(date);\n    var mintimes = millisSeconds * 1;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusSeconds: function (date, seconds) {\n    // 某个日期减去多少秒\n    var dateTime = this.getTime(date);\n    var mintimes = seconds * 1000;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusMinutes: function (date, minutes) {\n    // 某个日期减去多少分钟\n    var dateTime = this.getTime(date);\n    var mintimes = minutes * 60 * 1000;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusHours: function (date, hours) {\n    // 某个日期减去小时数\n    var dateTime = this.getTime(date);\n    var mintimes = hours * 60 * 60 * 1000;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusDays: function (date, days) {\n    // 某个日期减去天数\n    var dateTime = this.getTime(date);\n    var mintimes = days * 60 * 60 * 1000 * 24;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusMonths: function (date, months) {\n    // 某个日期减去多少个月,这里是按照一个月30天来计算天数的\n    var dateTime = this.getTime(date);\n    var mintimes = months * 30 * 60 * 60 * 1000 * 24;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusYears: function (date, years, isLeap) {\n    // 某个日期减去多少个年,这里是按照一个月365天来计算天数的\n    var dateTime = this.getTime(date);\n    var day = 365;\n    if (isLeap) day = 366;\n    var mintimes = years * day * 60 * 60 * 1000 * 24;\n    var rdate = dateTime - mintimes;\n    return this.format(new Date(rdate));\n  },\n  minusDate: function (date1, date2) {\n    // 某个日期减去某个日期，这样的操作视乎没什么意义\n    var dateTime = this.getTime(date1);\n    var dateTime2 = this.getTime(date2);;\n    var rdate = dateTime - dateTime2;\n    return this.format(new Date(rdate));\n  },\n  getMonthDays: function (date1) {\n    // 获取一个月有多少天\n    var currentMonth = this.getFirstDayOfMonth(date1);\n    var nextMonth = this.getNextDayOfMonth(date1);\n    return this.numDay(currentMonth, nextMonth);\n  },\n  getYearDays: function (date) {\n    // 获取一年有多少天\n    var firstDayYear = this.getFirstDayOfYear(date);\n    var lastDayYear = this.getLastDayOfYear(date);\n    return Math.ceil(this.numDay(firstDayYear, lastDayYear));\n  },\n  getDayOfYear: function (date1) {\n    // 某个日期是当年中的第几天\n    return Math.ceil(this.numDay(this.getFirstDayOfYear(date1), date1));\n  },\n  getDayOfMonth: function (date1) {\n    // 某个日期是在当月中的第几天\n    return Math.ceil(this.numDay(this.getFirstDayOfMonth(date1), date1));\n  },\n  getDayOfYearWeek: function (date) {\n    // 获取某个日期在这一年的第几周\n    var numdays = this.getDayOfYear(date);\n    return Math.ceil(numdays / 7);\n  },\n  getDayOfWeek: function (date1) {\n    // 某个日期是在当月中的星期几\n    return this.getWeek(date1);\n  },\n  getHourOfDay: function (date) {\n    // 获取在当前日期中的时间\n    return this.getHour(date);\n  },\n  eq: function (date1, date2) {\n    // 判断两个时间是否相等\n    var stime = this.getTime(this.toDate(date1));\n    var etime = this.getTime(this.toDate(date2));\n    return stime == etime ? true : false;\n  },\n  after: function (date1, date2) {\n    // 某个日期是否晚于某个日期\n    var stime = this.getTime(this.toDate(date1));\n    var etime = this.getTime(this.toDate(date2));\n    return stime \u003c etime ? true : false;\n  },\n  before: function (date1, date2) {\n    // 某个日期是否早于某个日期\n    var stime = this.getTime(this.toDate(date1));\n    var etime = this.getTime(this.toDate(date2));\n    return stime \u003e etime ? true : false;\n  },\n  getFirstDayOfYear: function (date) {\n    // 获取某年的第一天\n    var year = this.getYear(date);\n    var dateString = year + \"-01-01 00:00:00\";\n    return dateString;\n  },\n  getLastDayOfYear: function (date) {\n    // 获取某年的最后一天\n    var year = this.getYear(date);\n    var dateString = year + \"-12-01 00:00:00\";\n    var endDay = this.getMonthDays(dateString);\n    return year + \"-12-\" + endDay + \" 23:59:59\";\n  },\n  getFirstDayOfSeason: function (date) {\n    // 获取某季度的第一天\n    var seasonNum = this.getSeasonNum(date);\n    var year = this.getYear(date);\n    switch (seasonNum) {\n      case 1:\n        return year + \"-01-01 00:00:00\";\n      case 2:\n        return year + \"-04-01 00:00:00\";\n      case 3:\n        return year + \"-07-01 00:00:00\";\n      case 4:\n        return year + \"-10-01 00:00:00\";\n    }\n  },\n  getSeasonStartDate: function (year, season) {\n    // 获取某季度的第一天\n    switch (season) {\n      case 1:\n        return year + \"-01-01\";\n      case 2:\n        return year + \"-04-01\";\n      case 3:\n        return year + \"-07-01\";\n      case 4:\n        return year + \"-10-01\";\n    }\n  },\n  getLastDayOfSeason: function (date) {\n    // 获取某季度的最后一天\n    var seasonNum = this.getSeasonNum(date);\n    var year = this.getYear(date);\n    switch (seasonNum) {\n      case 1:\n        return year + \"-03-31 23:59:59\";\n      case 2:\n        return year + \"-06-30 23:59:59\";\n      case 3:\n        return year + \"-09-30 23:59:59\";\n      case 4:\n        return year + \"-12-31 23:59:59\";\n    }\n  },\n  getSeasonEndDate: function (year, season) {\n    // 获取某季度的最后一天\n    switch (season) {\n      case 1:\n        return year + \"-03-31\";\n      case 2:\n        return year + \"-06-30\";\n      case 3:\n        return year + \"-09-30\";\n      case 4:\n        return year + \"-12-31\";\n    }\n  },\n  getFirstDayOfMonth: function (date) {\n    // 获取某月的第一天\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    var dateString = year + \"-\" + month + \"-01 00:00:00\";\n    return dateString;\n  },\n  getMonthStartDate: function (year, month) {\n    // 获取某月的第一天\n    var monthStartDate = new Date(year, month - 1, 1);\n    return formatTime2(monthStartDate, \"yyyy-MM-dd\");\n  },\n  getLastDayOfMonth: function (date) {\n    // 获取某月最后一天\n    var endDay = this.getMonthDays(date);\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    return year + \"-\" + month + \"-\" + endDay + \" 23:59:59\";\n  },\n  getMonthEndDate: function (year, month) {\n    // 获取某月最后一天\n    var monthStartDate = new Date(year, month - 1, 1);\n    var monthEndDate = new Date(year, month, 1);\n    var days = (monthEndDate - monthStartDate) / (1000 * 60 * 60 * 24);\n    var monthEndDate = new Date(year, month - 1, days);\n    return formatTime2(monthEndDate, \"yyyy-MM-dd\");\n  },\n  getFirstOfWeek: function (date1) {\n    // 获取所在某一周的第一天\n    var week = this.getWeek(date1);\n    var date = this.minusDays(date1, week);\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    var date = this.getDay(date);\n    return year + \"-\" + month + \"-\" + date + \" 00:00:00\";\n  },\n  getLastOfWeek: function (date1) {\n    // 获取所在某一周的最后一天\n    var week = 6 - this.getWeek(date1);\n    var date = this.minusDays(date1, week);\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    var date = this.getDay(date);\n    return year + \"-\" + month + \"-\" + date + \" 23:59:59\";\n  },\n  getFirstOfDay: function (date) {\n    // 一天的开始时间\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    var date = this.getDay(date);\n    return year + \"-\" + month + \"-\" + date + \" 00:00:00\";\n  },\n  getLastOfDay: function (date) {\n    // 一天的结束时间\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    var date = this.getDay(date);\n    return year + \"-\" + month + \"-\" + date + \" 23:59:59\";\n  },\n  getNextDayOfMonth: function (date) {\n    // 获取下个月的第一天\n    var year = this.getYear(date);\n    var month = this.getMonth(date);\n    month = month * 1 + 1;\n    if (month \u003e 12) {\n      year = year + 1;\n      month = month - 12;\n    }\n    month = month \u003e 9 ? month : \"0\" + month;\n    var dateString = year + \"-\" + month + \"-01 00:00:00\";\n    return dateString;\n  },\n  getNow: function () {\n    // 获取当前日期\n    return new Date();\n  },\n  format: function (date) {\n    // 日期格式化\n    return this.getYear(date) + \"-\" + this.getMonth(date) + \"-\" + this.getDay(date) + \" \" + this.getHour(date) + \":\" + this.getMinute(date) + \":\" + this.getSecond(date);\n  },\n  getDate: function () {\n    // 获取当前日期\n    return this.getNow();\n  },\n  getYear: function (date) {\n    // 年\n    return this.toDate(date).getFullYear();\n  },\n  getMonth: function (date) {\n    // 月\n    var month = this.toDate(date).getMonth() + 1;\n    return month \u003e 9 ? month : \"0\" + month;\n  },\n  getDay: function (date) {\n    // 日\n    var day = this.toDate(date).getDate();\n    return day \u003e 9 ? day : \"0\" + day;\n  },\n  getWeek: function (date) {\n    // 获取日期的星期,如果为0代表星期日\n    return this.toDate(date).getDay();\n  },\n  getHour: function (date) {\n    // 时\n    var hour = this.toDate(date).getHours();\n    return hour \u003e 9 ? hour : \"0\" + hour;\n  },\n  getHour12: function (date) {\n    // 12小时制时\n    var hour = this.toDate(date).getHours();\n    return hour % 12 == 0 ? 12 : hour % 12;\n  },\n  getMinute: function (date) {\n    // 分\n    var minutes = this.toDate(date).getMinutes();\n    return minutes \u003e 9 ? minutes : \"0\" + minutes;\n  },\n  getSecond: function (date) {\n    // 秒\n    var seconds = this.toDate(date).getSeconds();\n    return seconds \u003e 9 ? seconds : \"0\" + seconds;\n  },\n  getMillisecond: function (date) {\n    // 毫秒\n    return this.toDate(date).getMilliseconds();\n  },\n  getSeasonNum: function (date) {\n    // 获取日期在当年是第几季度\n    var month = (this.getMonth(date) * 1) - 1;\n    return Math.floor((month + 3) / 3);\n  },\n  getLastSeasonNum: function (season) {\n    // 获取上一季度\n    if (season == 1) {\n      return 4;\n    } else {\n      return season - 1;\n    }\n  },\n  weekToChinese: function (date) {\n    // 星期\n    var nowWeek = this.getWeek(date);\n    var day = \"\";\n    switch (nowWeek) {\n      case 0:\n        day = \"日\";\n        break;\n        break;\n      case 1:\n        day = \"一\";\n        break;\n        break;\n      case 2:\n        day = \"二\";\n        break;\n        break;\n      case 3:\n        day = \"三\";\n        break;\n        break;\n      case 4:\n        day = \"四\";\n        break;\n        break;\n      case 5:\n        day = \"五\";\n        break;\n        break;\n      case 6:\n        day = \"六\";\n        break;\n    }\n    return day;\n  },\n  getTime: function (date) {\n    // 返回 1970 年 1 月 1 日至今的毫秒数。\n    return this.toDate(date).getTime();\n  },\n  getZoneNameValue: function (date) {\n    // 获得时区名和值\n    var arr = this.toDate(date).toString().match(/([A-Z]+)([-+]\\d+:?\\d+)/);\n    return {\n      'name': arr[1],\n      'value': arr[2]\n    };\n  },\n  getTimeDistance: function (time) {\n    // 支持传入10位或13位毫秒数，如 1587367194536,\"1587367194\"\n    // 支持传入日期格式，如 \"2020/4/20 15:31:18\"\n    // 支持传入Date\n    if (typeof time == \"number\" || Number(time) == time) {\n      if (String(time).length == 10) {\n        time = Number(time) * 1000\n      } else if (String(time).length == 13) {\n        time = Number(time)\n      } else {\n        console.log(\"时间格式错误\");\n        return time;\n      }\n    } else {\n      if (typeof time == \"string\" \u0026\u0026 time.split(\" \").length == 2 \u0026\u0026 time.split(/[- : \\/]/).length == 6) {\n        time = new Date(time.replace(/\\-/g, '/')).getTime();\n      } else {\n        console.log(\"时间格式错误\");\n        return time;\n      }\n    }\n    // 处理之后的time为13位数字格式的毫秒数\n    var date_now = new Date();\n    var date_time = new Date(time);\n    var distance = date_now.getTime() - time;\n    var days = parseInt(distance / (1000 * 60 * 60 * 24));\n    if (days == 1) {\n      return \"昨天\"\n    } else if (days \u003e 1 \u0026\u0026 days \u003c 4) {\n      return days + \"天前\";\n    } else if (days \u003e 3) {\n      // 超过3天的，返回日期，如 2018-12-05\n      // 如果是今年的，就省去年份，返回 12-05\n      var year = date_time.getFullYear();\n      var month = date_time.getMonth() + 1;\n      if (month \u003c 10) {\n        month = \"0\" + month;\n      }\n      var day = date_time.getDate();\n      if (day \u003c 10) {\n        day = \"0\" + day;\n      }\n      if (date_now.getFullYear() == year) {\n        return month + \"-\" + day;\n      } else {\n        return year + \"-\" + month + \"-\" + day;\n      }\n    }\n    var hours = parseInt((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    if (hours \u003e 0) {\n      return hours + \"小时前\";\n    }\n    var minutes = parseInt((distance % (1000 * 60 * 60)) / (1000 * 60));\n    if (minutes \u003e 0) {\n      return minutes + \"分钟前\";\n    };\n    return \"刚刚\";\n  }\n};\n\nexport const clone = obj =\u003e {\n  // 深度克隆\n  var o, i, j, k;\n  if (typeof (obj) != \"object\" || obj === null) return obj;\n  if (obj instanceof (Array)) {\n    o = [];\n    i = 0;\n    j = obj.length;\n    for (; i \u003c j; i++) {\n      if (typeof (obj[i]) == \"object\" \u0026\u0026 obj[i] != null) {\n        o[i] = clone(obj[i]);\n      } else {\n        o[i] = obj[i];\n      }\n    }\n  } else {\n    o = {};\n    for (i in obj) {\n      if (typeof (obj[i]) == \"object\" \u0026\u0026 obj[i] != null) {\n        o[i] = clone(obj[i]);\n      } else {\n        o[i] = obj[i];\n      }\n    }\n  }\n  return o;\n};\n\nexport const jsonFormat =  (json) =\u003e { // 格式化Json\n  let maxLength = 50000;\n  let compress = '';\n  let txt = clone(json);\n\n  let indentChar = '    ';\n  if (/^\\s*$/.test(txt)) {\n    console.log('数据为空,无法格式化! ');\n    return;\n  }\n  try {\n    var data = eval('(' + txt + ')');\n  } catch (e) {\n    console.log('数据源语法错误,格式化失败! 错误信息: ' + e.description, 'err');\n    return;\n  }\n  let draw = [],\n    last = false,\n    This = this,\n    line = compress ? '' : '\\n',\n    nodeCount = 0,\n    maxDepth = 0;\n\n  let notify = function (name, value, isLast, indent, formObj) {\n    nodeCount++; /*节点计数*/\n    for (var i = 0, tab = ''; i \u003c indent; i++)\n      tab += indentChar; /* 缩进HTML */\n    tab = compress ? '' : tab; /*压缩模式忽略缩进*/\n    maxDepth = ++indent; /*缩进递增并记录*/\n    if (value \u0026\u0026 value.constructor == Array) {\n      /*处理数组*/\n      draw.push(\n        tab + (formObj ? '\"' + name + '\":' : '') + '[' + line\n      ); /*缩进'[' 然后换行*/\n      for (let i = 0; i \u003c value.length; i++)\n        notify(i, value[i], i == value.length - 1, indent, false);\n      draw.push(\n        tab + ']' + (isLast ? line : ',' + line)\n      ); /*缩进']'换行,若非尾元素则添加逗号*/\n    } else if (value \u0026\u0026 typeof value == 'object') {\n      /*处理对象*/\n      draw.push(\n        tab + (formObj ? '\"' + name + '\":' : '') + '{' + line\n      ); /*缩进'{' 然后换行*/\n      let len = 0,\n        i = 0;\n      for (let key in value)\n        len++;\n      for (let key in value)\n        notify(key, value[key], ++i == len, indent, true);\n      draw.push(\n        tab + '}' + (isLast ? line : ',' + line)\n      ); /*缩进'}'换行,若非尾元素则添加逗号*/\n    } else {\n      if (typeof value == 'string') value = '\"' + value + '\"';\n      draw.push(\n        tab +\n        (formObj ? '\"' + name + '\":' : '') +\n        value +\n        (isLast ? '' : ',') +\n        line\n      );\n    }\n  };\n  let isLast = true,\n    indent = 0;\n  notify('', data, isLast, indent, false);\n  val = draw.join('');\n  // if (draw.join('').length \u003e maxLength) { // 文本内容过大要特殊处理\n  //   val = draw.join('').substr(0, maxLength) + \"...文本过大\";\n  // }\n  return val;\n}\n\n/**\n * 页面跳转\n * @param apid:菜单装配中配置的 一级菜单的id 或 cd。\n * @param mid:模块(module)的id 或 cd。\n * @param param:模块接收的额外参数。\n * \n */\nexport const onOpen = (appid, mid, param) =\u003e {\n  let SubPortal = new ssdev.ux.portal.SubPortal();\n  SubPortal.$portal = $portal;\n  return SubPortal.onOpen(appid, mid, param)\n}\n\n\n"],"mappings":"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","names":[]}